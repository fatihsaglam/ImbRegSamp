% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GNO.R
\name{GNO}
\alias{GNO}
\title{Gaussian Noise Oversampling}
\usage{
GNO(
  x,
  y,
  phi = NULL,
  thresh_rel = 0.5,
  perc_ov_lower = NULL,
  perc_ov_upper = NULL,
  perc_un = NULL,
  rel_method = "PCHIP",
  pert = 0.02,
  ...
)
}
\arguments{
\item{x}{feature matrix or dataframe. Only numeric variables for now.}

\item{y}{target variable.}

\item{phi}{Relevance values for each sample. Default is NULL. If NULL,
inverse of kernel density estimation is used.}

\item{thresh_rel}{threshold to determine rare values. Default is 0.5.}

\item{perc_ov_lower}{percentage of oversampling of lower rare samples. If
NULL, it is automatically determined by algorithm. Cannot be lower than 1.}

\item{perc_ov_upper}{percentage of oversampling of upper rare samples. If
NULL, it is automatically determined by algorithm. Cannot be lower than 1.}

\item{perc_un}{percentage of undersampling of non-rare samples. If NULL, it
is automatically determined by algorithm. Cannot be higher than 1.}

\item{rel_method}{method for relevance function. Default is "PCHIP". Choices
are "PCHIP" and "density". Ignored if phi is given.}

\item{pert}{effects the variance of noises. Default is 0.02, same as the paper
(Branco et al., 2019).}

\item{...}{relevance function settings.}
}
\value{
an list object which includes:
 \item{x_new}{Balanced feature matrix}
 \item{y_new}{Balanced target variable}
 \item{groups_new}{categories of new data}
 \item{x_original}{original feature matrix}
 \item{y_original}{original target variable}
 \item{groups_original}{categories of original data}
 \item{x_syn}{Synthetic feature matrix}
 \item{y_syn}{Synthetic target variable}
 \item{phi}{relevance function values for y}
 \item{rel_model}{Details about relevance function. Can be used to calculate
 new relevance for test data.}
}
\description{
\code{GNO} applies undersampling and oversampling to
imbalanced regression data sets.
}
\details{
GNO (Branco et al., 2019) generates synthetic data by adding Gaussian noise.
It compares the length of link to the median distance to other rare samples.
If the first is higher, SMOGN generates by adding noise. If the second is
higher, it generates sample on the link.
}
\examples{
x <- rnorm(100)
err <- rnorm(100)
y <- 2 + x^2 + err

m_GNO <- GNO(x = x, y = y)

plot(x, y)
plot(m_GNO$x_new, m_GNO$y_new)

}
\references{
Branco, Paula, Luis Torgo, and Rita P. Ribeiro. 2019. "Pre-Processing
Approaches for Imbalanced Distributions in Regression." Neurocomputing
343: 76–99. https://doi.org/https://doi.org/10.1016/j.neucom.2018.11.100.
}
\author{
Fatih Sağlam, saglamf89@gmail.com
}
